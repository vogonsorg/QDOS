diff -urNp Mesa-3.4.2/src/dlist.c Mesa-3.4.2x/src/dlist.c
--- Mesa-3.4.2/src/dlist.c	2015-10-05 05:50:00.000000000 +0300
+++ Mesa-3.4.2x/src/dlist.c	2016-03-27 07:11:10.000000000 +0300
@@ -5525,6 +5525,7 @@ _mesa_init_dlist_table( struct _glapi_ta
 
 
 
+#ifdef MESA_DEBUG
 /***
  *** Debugging code
  ***/
@@ -5716,3 +5717,4 @@ void mesa_print_display_list( GLuint lis
    GET_CURRENT_CONTEXT(ctx);
    print_list( ctx, stderr, list );
 }
+#endif
diff -urNp Mesa-3.4.2/src/FX/fxapi.c Mesa-3.4.2x/src/FX/fxapi.c
--- Mesa-3.4.2/src/FX/fxapi.c	2015-10-15 10:02:10.000000000 +0300
+++ Mesa-3.4.2x/src/FX/fxapi.c	2016-03-27 07:11:10.000000000 +0300
@@ -698,7 +698,6 @@ void GLAPIENTRY fxMesaSetNearFar(GLfloat
  * More a trick than a real extesion, use the shared global
  * palette extension. 
  */
-extern void GLAPIENTRY gl3DfxSetPaletteEXT(GLuint *pal); /* silence warning */
 void GLAPIENTRY gl3DfxSetPaletteEXT(GLuint *pal)
 {
   fxMesaContext fxMesa =fxMesaCurrentCtx;
@@ -726,7 +725,7 @@ void GLAPIENTRY gl3DfxSetPaletteEXT(GLui
 
 static GrScreenResolution_t fxBestResolution(int width, int height, int aux)
 {
-  static int resolutions[][5]={ 
+  static const int resolutions[][5]={ 
     { 320, 200, GR_RESOLUTION_320x200, 2, 2 },
     { 320, 240, GR_RESOLUTION_320x240, 2, 2 },
     { 512, 384, GR_RESOLUTION_512x384, 2, 2 },
@@ -744,7 +743,7 @@ static GrScreenResolution_t fxBestResolu
     ,{ 1600, 1200, GR_RESOLUTION_1600x1200, 16, 8 }
 #endif
   };
-  int NUM_RESOLUTIONS = sizeof(resolutions) / (sizeof(int)*5);
+  const int NUM_RESOLUTIONS = sizeof(resolutions) / (sizeof(int)*5);
   int i,fbmem;
   GrScreenResolution_t lastvalidres=resolutions[4][2];
 
diff -urNp Mesa-3.4.2/src/FX/fxcva.c Mesa-3.4.2x/src/FX/fxcva.c
--- Mesa-3.4.2/src/FX/fxcva.c	2000-11-26 23:10:26.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxcva.c	2016-05-02 01:55:50.000000000 +0300
@@ -66,7 +66,7 @@
 #define PRIM_CULLED 3
 
 
-static GLuint reduce_prim[GL_POLYGON+2] = {
+static const GLuint reduce_prim[GL_POLYGON+2] = {
    PRIM_POINTS,
    PRIM_LINES,
    PRIM_LINES,
@@ -461,7 +461,7 @@ void fxDDMergeAndRender( struct vertex_b
       cvaVB->TexCoordPtr[1] = cvaVB->store.TexCoord[1];
       flags |= fxMesa->tex_dest[1];
    }
-#if 0
+#if defined(MESA_DEBUG) && 0
    fxPrintSetupFlags("FX cva merge & render", flags);
 #endif
 
diff -urNp Mesa-3.4.2/src/FX/fxdos.c Mesa-3.4.2x/src/FX/fxdos.c
--- Mesa-3.4.2/src/FX/fxdos.c	2016-03-21 22:41:50.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxdos.c	2016-03-27 07:11:10.000000000 +0300
@@ -55,15 +55,13 @@
 #include "GL/gl.h"
 #include "GL/fxmesa.h"
 
-extern void GLAPIENTRY gl3DfxSetPaletteEXT(GLuint*);
-
 #if 0
 /* copied from fxwgl.c */
 
 struct __extensions__
 {
   fxMesaProc  proc;
-  char  *name;
+  const char *name;
 };
 
 static struct __extensions__   ext[] = {
@@ -90,7 +88,8 @@ static struct __extensions__   ext[] = {
    { (fxMesaProc)glCopyTexSubImage3DEXT,		"glCopyTexSubImage3DEXT"	},
    { (fxMesaProc)glTexImage3DEXT,			"glTexImage3DEXT"		},
    { (fxMesaProc)glTexSubImage3DEXT,			"glTexSubImage3DEXT"		},
-/* { (fxMesaProc)gl3DfxSetPaletteEXT,			"gl3DfxSetPaletteEXT"		},*/
+   { (fxMesaProc)gl3DfxSetPaletteEXT,			"3DFX_set_global_palette"	},
+   { (fxMesaProc)gl3DfxSetPaletteEXT,			"gl3DfxSetPaletteEXT"		},
    { (fxMesaProc)glColorTableEXT,			"glColorTableEXT"		},
    { (fxMesaProc)glColorSubTableEXT,			"glColorSubTableEXT"		},
    { (fxMesaProc)glGetColorTableEXT,			"glGetColorTableEXT"		},
@@ -154,6 +153,10 @@ fxMesaProc fxMesaGetProcAddress(const ch
 fxMesaProc fxMesaGetProcAddress(const char * sym)
 {
    fxMesaProc p = (fxMesaProc)_glapi_get_proc_address(sym);
+   if (p == NULL) {
+     if (!strcmp(sym,"gl3DfxSetPaletteEXT")) return (fxMesaProc)gl3DfxSetPaletteEXT;
+     if (!strcmp(sym,"3DFX_set_global_palette")) return (fxMesaProc)gl3DfxSetPaletteEXT;/* for compat */
+   }
    return p;
 }
 #endif
diff -urNp Mesa-3.4.2/src/FX/fxdrv.h Mesa-3.4.2x/src/FX/fxdrv.h
--- Mesa-3.4.2/src/FX/fxdrv.h	2015-10-05 05:50:00.000000000 +0300
+++ Mesa-3.4.2x/src/FX/fxdrv.h	2016-05-02 01:56:00.000000000 +0300
@@ -530,7 +530,9 @@ typedef void (*tfxSetupFunc)(struct vert
 extern GrHwConfiguration glbHWConfig;
 extern int glbCurrentBoard;
 
+#ifdef MESA_DEBUG
 extern void fxPrintSetupFlags( const char *msg, GLuint flags );
+#endif
 extern void fxSetupFXUnits(GLcontext *);
 extern void fxSetupDDPointers(GLcontext *);
 extern void fxDDSetNearFar(GLcontext *, GLfloat, GLfloat);
@@ -685,4 +687,7 @@ extern void fxTMMoveInTM_NoLock(fxMesaCo
 				GLint where);
 extern void fxInitPixelTables(fxMesaContext fxMesa, GLboolean bgrOrder);
 
+
+GLAPI void GLAPIENTRY gl3DfxSetPaletteEXT(GLuint *_pal);
+
 #endif
diff -urNp Mesa-3.4.2/src/FX/fxglidew.c Mesa-3.4.2x/src/FX/fxglidew.c
--- Mesa-3.4.2/src/FX/fxglidew.c	2015-10-05 05:50:00.000000000 +0300
+++ Mesa-3.4.2x/src/FX/fxglidew.c	2016-05-02 01:55:50.000000000 +0300
@@ -182,6 +182,11 @@ void FX_grGammaCorrectionValue(float val
 {
   (void)val;
 /* ToDo */
+  #if !defined(XF86DRI) && 0  /* this is not even used */
+   BEGIN_BOARD_LOCK();
+   guGammaCorrectionRGB (val, val, val);
+   END_BOARD_LOCK();
+  #endif
 }
 
 int FX_getFogTableSize(void)
diff -urNp Mesa-3.4.2/src/FX/fxsanity.c Mesa-3.4.2x/src/FX/fxsanity.c
--- Mesa-3.4.2/src/FX/fxsanity.c	2000-02-09 21:13:11.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxsanity.c	2016-05-02 01:55:50.000000000 +0300
@@ -47,11 +47,11 @@
 #include "conf.h"
 #endif
 
-
-
 #if defined(FX)
 #include "fxdrv.h"
 
+#if defined(MESA_DEBUG)
+
 /* I have found this quite useful in tracking down transformation &
  * clipping bugs.  If you get a random graphics card freeze, running
  * your triangles through this will probably catch the problem.
@@ -115,6 +115,8 @@ void fx_sanity_triangle( GrVertex *v1, G
       fprintf(stderr, "\n\n\n");
 }
 
+#endif /* MESA_DEBUG */
+
 #else
 
 void gl_fxsanity_dummy()
diff -urNp Mesa-3.4.2/src/FX/fxsetup.c Mesa-3.4.2x/src/FX/fxsetup.c
--- Mesa-3.4.2/src/FX/fxsetup.c	2015-10-15 10:02:10.000000000 +0300
+++ Mesa-3.4.2x/src/FX/fxsetup.c	2016-03-27 07:11:10.000000000 +0300
@@ -68,7 +68,9 @@ static void fxSetupBlend(GLcontext *ctx)
 static void fxSetupDepthTest(GLcontext *ctx);
 static void fxSetupScissor(GLcontext *ctx);
 static void fxSetupCull(GLcontext *ctx);
+#ifdef MESA_DEBUG
 static void gl_print_fx_state_flags( const char *msg, GLuint flags);
+#endif
 /*static GLboolean fxMultipassBlend(struct vertex_buffer *, GLuint);*/
 static GLboolean fxMultipassTexture( struct vertex_buffer *, GLuint );
 
@@ -143,6 +145,7 @@ static void fxTexValidate(GLcontext *ctx
   }
 }
 
+#ifdef MESA_DEBUG
 static void fxPrintUnitsMode( const char *msg, GLuint mode )
 {
    fprintf(stderr, 
@@ -174,6 +177,7 @@ static void fxPrintUnitsMode( const char
 	   (mode & FX_UM_ALPHA_ITERATED)     ? "ALPHA_ITERATED, " : "",
 	   (mode & FX_UM_ALPHA_CONSTANT)     ? "ALPHA_CONSTANT, " : "");
 }
+#endif
 
 static GLuint fxGetTexSetConfiguration(GLcontext *ctx,
 				       struct gl_texture_object *tObj0,
@@ -298,10 +302,10 @@ static GLuint fxGetTexSetConfiguration(G
   }
 
   unitsmode|=(ifmt | envmode);
-
-  if (MESA_VERBOSE & (VERBOSE_DRIVER|VERBOSE_TEXTURE)) 
+#ifdef MESA_DEBUG
+  if (MESA_VERBOSE & (VERBOSE_DRIVER|VERBOSE_TEXTURE))
      fxPrintUnitsMode("unitsmode", unitsmode);
-
+#endif
   return unitsmode;
 }
 
@@ -1792,6 +1796,7 @@ void fxDDShadeModel(GLcontext *ctx, GLen
 /************************************************************************/
 /****************************** Units SetUp *****************************/
 /************************************************************************/
+#ifdef MESA_DEBUG
 static void gl_print_fx_state_flags( const char *msg, GLuint flags )
 {
    fprintf(stderr, 
@@ -1806,15 +1811,16 @@ static void gl_print_fx_state_flags( con
 	   (flags & FX_NEW_COLOR_MASK)  ? "colormask, " : "",
 	   (flags & FX_NEW_CULL)        ? "cull, " : "");
 }
+#endif
 
 void fxSetupFXUnits( GLcontext *ctx )
 {
   fxMesaContext fxMesa=(fxMesaContext)ctx->DriverCtx;
   GLuint newstate = fxMesa->new_state;
-
+#ifdef MESA_DEBUG
   if (MESA_VERBOSE&VERBOSE_DRIVER)
      gl_print_fx_state_flags("fxmesa: fxSetupFXUnits", newstate);
-
+#endif
   if (newstate) {
      if (newstate & FX_NEW_TEXTURING)
 	fxSetupTexture(ctx);
diff -urNp Mesa-3.4.2/src/FX/fxtrifuncs.c Mesa-3.4.2x/src/FX/fxtrifuncs.c
--- Mesa-3.4.2/src/FX/fxtrifuncs.c	2000-03-19 03:27:23.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxtrifuncs.c	2016-03-27 07:11:10.000000000 +0300
@@ -234,6 +234,7 @@ void fxDDTrifuncInit() 
 #endif
 }
 
+#ifdef MESA_DEBUG
 void fxPrintRenderState( const char *msg, GLuint state )
 {
    fprintf(stderr, "%s: (%x) %s%s%s%s%s%s\n",
@@ -258,6 +259,7 @@ void fxPrintHintState( const char *msg, 
 	   (state & GR_STWHINT_ST_DIFF_TMU1)  ? "st-tmu1, " : "");
 
 }
+#endif
 
 
 void fxDDChooseRenderState( GLcontext *ctx )
diff -urNp Mesa-3.4.2/src/FX/fxvsetup.c Mesa-3.4.2x/src/FX/fxvsetup.c
--- Mesa-3.4.2/src/FX/fxvsetup.c	2000-11-26 23:10:26.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxvsetup.c	2016-05-02 01:55:50.000000000 +0300
@@ -57,6 +57,7 @@
 #include "pipeline.h"
 #include "fxvsetup.h"
 
+#ifdef MESA_DEBUG
 void fxPrintSetupFlags( const char *msg, GLuint flags )
 {
    fprintf(stderr, "%s: %d %s%s%s%s%s%s\n",
@@ -69,6 +70,7 @@ void fxPrintSetupFlags( const char *msg,
 	  (flags & SETUP_TMU0)  ? " tmu0," : "",
 	  (flags & SETUP_TMU1)  ? " tmu1," : "");
 }
+#endif
 
 static void project_texcoords( struct vertex_buffer *VB,
 			       GLuint tmu_nr, GLuint tc_nr,
@@ -328,8 +330,10 @@ tfxSetupFunc fxDDChooseSetupFunction(GLc
    if (ctx->Color.BlendEnabled)
       setupindex |= SETUP_RGBA;
 
+#ifdef MESA_DEBUG
    if (MESA_VERBOSE & (VERBOSE_DRIVER|VERBOSE_PIPELINE|VERBOSE_STATE))
       fxPrintSetupFlags("fxmesa: vertex setup function", setupindex); 
+#endif
 
    fxMesa->setupindex = setupindex;
    fxMesa->view_clip_tri = fxTriViewClipTab[setupindex&0x7];
@@ -459,10 +463,12 @@ void fxDDPartialRasterSetup( struct vert
    ind &= fxMesa->setupindex;
    fxMesa->setupdone |= ind;
 
+#ifdef MESA_DEBUG
    if (MESA_VERBOSE & (VERBOSE_DRIVER|VERBOSE_PIPELINE)) {
       gl_print_vert_flags("new outputs", VB->pipeline->new_outputs);
       fxPrintSetupFlags("fxmesa: partial setup function", ind); 
    }
+#endif
 
    if (ind) 
       setupfuncs[ind]( VB, VB->Start, VB->Count );   
diff -urNp Mesa-3.4.2/src/FX/fxwgl.c Mesa-3.4.2x/src/FX/fxwgl.c
--- Mesa-3.4.2/src/FX/fxwgl.c	2016-03-21 22:41:50.000000000 +0200
+++ Mesa-3.4.2x/src/FX/fxwgl.c	2016-03-27 07:11:10.000000000 +0300
@@ -55,7 +55,7 @@
 extern "C" {
 #endif
 
-#define GL_GLEXT_PROTOTYPES 1
+#define GL_GLEXT_PROTOTYPES
 #include "fxdrv.h"
 #include <windows.h>
 #include "GL/gl.h"
@@ -72,7 +72,7 @@ extern "C" {
 struct __extensions__
 {
   PROC  proc;
-  char  *name;
+  const char *name;
 };
 
 struct __pixelformat__
@@ -81,8 +81,6 @@ struct __pixelformat__
   GLint mesaAttr[MAX_MESA_ATTRS];
 };
 
-WINGDIAPI void GLAPIENTRY gl3DfxSetPaletteEXT(GLuint *);
-
 static struct __extensions__   ext[] = {
 
 #ifdef GL_EXT_polygon_offset
@@ -108,7 +106,8 @@ static struct __extensions__   ext[] = {
    { (PROC)glCopyTexSubImage3DEXT,		"glCopyTexSubImage3DEXT"	},
    { (PROC)glTexImage3DEXT,			"glTexImage3DEXT"		},
    { (PROC)glTexSubImage3DEXT,			"glTexSubImage3DEXT"		},
-/* { (PROC)gl3DfxSetPaletteEXT,			"gl3DfxSetPaletteEXT"		},*/
+   { (PROC)gl3DfxSetPaletteEXT,			"3DFX_set_global_palette"	},
+   { (PROC)gl3DfxSetPaletteEXT,			"gl3DfxSetPaletteEXT"		},
    { (PROC)glColorTableEXT,			"glColorTableEXT"		},
    { (PROC)glColorSubTableEXT,			"glColorSubTableEXT"		},
    { (PROC)glGetColorTableEXT,			"glGetColorTableEXT"		},
diff -urNp Mesa-3.4.2/src/glapi.c Mesa-3.4.2x/src/glapi.c
--- Mesa-3.4.2/src/glapi.c	2000-11-05 23:24:00.000000000 +0200
+++ Mesa-3.4.2x/src/glapi.c	2016-03-27 07:11:10.000000000 +0300
@@ -253,7 +253,7 @@ struct name_address_offset {
 };
 
 
-static struct name_address_offset static_functions[] = {
+static const struct name_address_offset static_functions[] = {
 	/* GL 1.1 */
         { "glNewList", (GLvoid *) glNewList, _gloffset_NewList },
         { "glEndList", (GLvoid *) glEndList, _gloffset_EndList },
@@ -1739,6 +1739,7 @@ _glapi_get_proc_name(GLuint offset)
 void
 _glapi_check_table(const struct _glapi_table *table)
 {
+#ifdef DEBUG
    const GLuint entries = _glapi_get_dispatch_table_size();
    const void **tab = (const void **) table;
    GLuint i;
@@ -1746,7 +1747,6 @@ _glapi_check_table(const struct _glapi_t
       assert(tab[i]);
    }
 
-#ifdef DEBUG
    /* Do some spot checks to be sure that the dispatch table
     * slots are assigned correctly.
     */
@@ -1795,6 +1795,3 @@ _glapi_check_table(const struct _glapi_t
 #endif
 }
 
-
-
-
diff -urNp Mesa-3.4.2/src/hash.c Mesa-3.4.2x/src/hash.c
--- Mesa-3.4.2/src/hash.c	2000-11-26 23:10:26.000000000 +0200
+++ Mesa-3.4.2x/src/hash.c	2016-03-27 07:11:10.000000000 +0300
@@ -219,7 +219,7 @@ GLuint _mesa_HashFirstEntry(struct _mesa
 }
 
 
-
+#ifdef HASH_TEST_HARNESS
 /*
  * Dump contents of hash table for debugging.
  */
@@ -235,6 +235,7 @@ void _mesa_HashPrint(const struct _mesa_
       }
    }
 }
+#endif
 
 
 
diff -urNp Mesa-3.4.2/src/Makefile.dxe Mesa-3.4.2x/src/Makefile.dxe
--- Mesa-3.4.2/src/Makefile.dxe	2016-03-21 22:41:50.000000000 +0200
+++ Mesa-3.4.2x/src/Makefile.dxe	2016-03-27 07:11:10.000000000 +0300
@@ -24,6 +24,7 @@ AR = ar
 CFLAGS = -O2 -mtune=i586 -ffast-math -fomit-frame-pointer \
 	-DFX -DUSE_X86_ASM -DUSE_MMX_ASM -DUSE_3DNOW_ASM -DUSE_KATMAI_ASM -IFX/X86 \
 	-DFX_GLIDE3 -I$(G3DIR)/include -I. -I$(INCDIR)
+CFLAGS+= -DNDEBUG
 
 ARFLAGS = rus
 
@@ -33,7 +34,6 @@ CORE_SOURCES = \
 	alpha.c \
 	alphabuf.c \
 	attrib.c \
-	bbox.c \
 	bitmap.c \
 	blend.c \
 	buffers.c \
@@ -108,6 +108,7 @@ CORE_SOURCES = \
 	X86/common_x86.c \
 	X86/3dnow.c \
 	X86/katmai.c
+#	bbox.c 
 #	config.c 
 
 DRIVER_SOURCES = \
diff -urNp Mesa-3.4.2/src/matrix.c Mesa-3.4.2x/src/matrix.c
--- Mesa-3.4.2/src/matrix.c	2001-03-20 00:45:31.000000000 +0200
+++ Mesa-3.4.2x/src/matrix.c	2016-03-27 07:11:10.000000000 +0300
@@ -51,6 +51,7 @@
 #endif
 
 
+#if 0 /**/
 static const char *types[] = {
    "MATRIX_GENERAL",
    "MATRIX_IDENTITY",
@@ -60,10 +61,11 @@ static const char *types[] = {
    "MATRIX_2D_NO_ROT",
    "MATRIX_3D"
 };
+#endif /**/
 static void matmul4( GLfloat *product, const GLfloat *a, const GLfloat *b );
 
 
-static GLfloat Identity[16] = {
+static const GLfloat Identity[16] = {
    1.0, 0.0, 0.0, 0.0,
    0.0, 1.0, 0.0, 0.0,
    0.0, 0.0, 1.0, 0.0,
@@ -71,6 +73,7 @@ static GLfloat Identity[16] = {
 };
 
 
+#if 0 /**/
 static void print_matrix_floats( const GLfloat m[16] )
 {
    int i;
@@ -95,6 +98,7 @@ void gl_print_matrix( const GLmatrix *m 
       fprintf(stderr, "  - not available\n");
 #endif
 }
+#endif /**/
 
 
 
diff -urNp Mesa-3.4.2/src/pipeline.c Mesa-3.4.2x/src/pipeline.c
--- Mesa-3.4.2/src/pipeline.c	2000-11-26 23:10:26.000000000 +0200
+++ Mesa-3.4.2x/src/pipeline.c	2016-03-27 07:11:10.000000000 +0300
@@ -75,8 +75,7 @@ int MESA_DEBUG_FLAGS = 0 
 ;
 #endif
 
-
-
+#ifdef MESA_DEBUG
 void gl_print_pipe_ops( const char *msg, GLuint flags )
 {
    fprintf(stderr, 
@@ -95,7 +94,7 @@ void gl_print_pipe_ops( const char *msg,
 	   (flags & PIPE_OP_RENDER)        ? "render, " : "");
 
 }
-
+#endif
 
 
 /* Have to reset only those parts of the vb which are being recalculated.
@@ -530,6 +529,7 @@ void gl_run_pipeline( struct vertex_buff
    pipe->new_state = 0;
 }
 
+#ifdef MESA_DEBUG
 void gl_print_vert_flags( const char *name, GLuint flags ) 
 {
    fprintf(stderr, 
@@ -672,5 +672,5 @@ void gl_print_active_pipeline( GLcontext
 				stages[i]->pre_forbidden_inputs);
       }
 }
-
+#endif
 
diff -urNp Mesa-3.4.2/src/state.c Mesa-3.4.2x/src/state.c
--- Mesa-3.4.2/src/state.c	2001-03-23 04:09:45.000000000 +0200
+++ Mesa-3.4.2x/src/state.c	2016-03-27 07:11:10.000000000 +0300
@@ -859,6 +859,7 @@ static void update_rasterflags( GLcontex
 }
 
 
+#ifdef MESA_DEBUG
 void gl_print_state( const char *msg, GLuint state )
 {
    fprintf(stderr,
@@ -904,6 +905,7 @@ void gl_print_enable_flags( const char *
 	   (flags & ENABLE_NORMALIZE)  ? "normalize, " : "",
 	   (flags & ENABLE_RESCALE)    ? "rescale, " : "");
 }
+#endif
 
 
 /*
diff -urNp Mesa-3.4.2/src/vbxform.c Mesa-3.4.2x/src/vbxform.c
--- Mesa-3.4.2/src/vbxform.c	2001-05-15 23:21:17.000000000 +0300
+++ Mesa-3.4.2x/src/vbxform.c	2016-03-27 07:11:10.000000000 +0300
@@ -977,6 +977,7 @@ void gl_execute_cassette( GLcontext *ctx
    gl_reset_vb( VB );
 }
 
+#ifdef MESA_DEBUG
 void gl_print_cassette( struct immediate *IM )
 {
    gl_print_cassette_flags( IM, IM->Flag );
@@ -1081,16 +1082,4 @@ void gl_print_cassette_flags( struct imm
       fprintf(stderr, "\n");  
    }      
 }
-
-
-
-
-
-
-
-
-
-
-
-
-
+#endif
